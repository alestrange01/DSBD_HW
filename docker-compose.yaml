services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: postgres
    ports:
      - "5532:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server_container
    volumes:
      - ./server:/app
      - pg_data:/var/lib/postgresql/data
    command: python main.py
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
    depends_on:
      - postgres
      - kafka-broker
    ports:
      - "50051:50051"
      
  data_collector:
    build:
      context: ./data_collector
      dockerfile: Dockerfile
    container_name: data_collector_container
    volumes:
      - ./data_collector:/app
      - pg_data:/var/lib/postgresql/data
    command: python main.py
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
    depends_on:
      - postgres
      - kafka-broker
    
  data_cleaner:
    build:
      context: ./data_cleaner
      dockerfile: Dockerfile
    container_name: data_cleaner_container
    volumes:
      - ./data_cleaner:/app
      - pg_data:/var/lib/postgresql/data
    command: python main.py
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
    depends_on:
      - postgres
      - kafka-broker
      - server
      - data_collector

  alert_system:
    build:
      context: ./alert_system
      dockerfile: Dockerfile
    container_name: alert_system_container
    volumes:
      - ./alert_system:/app
      - pg_data:/var/lib/postgresql/data
    command: python main.py
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
    depends_on:
      - postgres
      - kafka-broker
      - server
      - data_collector
  
  alert_notification_system:
    build:
      context: ./alert_notification_system
      dockerfile: Dockerfile
    container_name: alert_notification_system_container
    volumes:
      - ./alert_notification_system:/app
      - pg_data:/var/lib/postgresql/data
    command: python main.py
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker:9092
      EMAIL_SENDER_USER: "fraromeo69@gmail.com"
      EMAIL_SENDER_PASSWORD: "nxis zslg ywts rpyj"
    depends_on:
      - postgres
      - kafka-broker
      - server
      - data_collector
      - alert_system

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092, PLAINTEXT_INTERNAL://localhost:19092  
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data


volumes:
  pg_data:
  zookeeper_data:
  kafka_data: