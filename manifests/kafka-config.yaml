apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-1-deployment
  labels:
    app: kafka-broker-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-1
  template:
    metadata:
      labels:
        app: kafka-broker-1
    spec:
      automountServiceAccountToken: false
      initContainers:
      - name: init-zookeeper 
        image: busybox 
        command: ['sh', '-c', 'until nc -z -v -w30 zookeeper 2181; do echo "Waiting for Zookeeper..."; sleep 5; done'] 
      containers:
      - name: kafka-broker-1-container
        image: confluentinc/cp-kafka:latest
        securityContext:
            runAsUser: 0
            runAsGroup: 0
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-broker-1:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        ports:
        - containerPort: 9092
        volumeMounts:
              - name: kafka-broker-1-data
                mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-broker-1-data
          persistentVolumeClaim:
            claimName: kafka-broker-1-pvc
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-2-deployment
  labels:
    app: kafka-broker-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-2
  template:
    metadata:
      labels:
        app: kafka-broker-2
    spec:
      automountServiceAccountToken: false
      initContainers:
      - name: init-zookeeper 
        image: busybox 
        command: ['sh', '-c', 'until nc -z -v -w30 zookeeper 2181; do echo "Waiting for Zookeeper..."; sleep 5; done'] 
      containers:
      - name: kafka-broker-2-container
        image: confluentinc/cp-kafka:latest
        securityContext:
            runAsUser: 0
            runAsGroup: 0
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        env:
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-broker-2:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        ports:
        - containerPort: 9092
        volumeMounts:
              - name: kafka-broker-2-data
                mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-broker-2-data
          persistentVolumeClaim:
            claimName: kafka-broker-2-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-3-deployment
  labels:
    app: kafka-broker-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-3
  template:
    metadata:
      labels:
        app: kafka-broker-3
    spec:
      automountServiceAccountToken: false
      initContainers:
      - name: init-zookeeper 
        image: busybox 
        command: ['sh', '-c', 'until nc -z -v -w30 zookeeper 2181; do echo "Waiting for Zookeeper..."; sleep 5; done'] 
      containers:
      - name: kafka-broker-3-container
        image: confluentinc/cp-kafka:latest
        securityContext:
            runAsUser: 0
            runAsGroup: 0
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        env:
        - name: KAFKA_BROKER_ID
          value: "3"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-service:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-broker-3:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        ports:
        - containerPort: 9092
        volumeMounts:
              - name: kafka-broker-3-data
                mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-broker-3-data
          persistentVolumeClaim:
            claimName: kafka-broker-3-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-1
  labels:
    app: kafka-broker-1
spec:
  selector:
    app: kafka-broker-1
  ports:
  - name: kafka-broker-1
    protocol: TCP
    port: 9092
    targetPort: 9092

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-2
  labels:
    app: kafka-broker-2
spec:
  selector:
    app: kafka-broker-2
  ports:
  - name: kafka-broker-2
    protocol: TCP
    port: 9092
    targetPort: 9092

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-3
  labels:
    app: kafka-broker-3
spec:
  selector:
    app: kafka-broker-3
  ports:
  - name: kafka-broker-3
    protocol: TCP
    port: 9092
    targetPort: 9092
    
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-broker-1-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /mnt/data/kafka/broker-1

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-broker-1-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-broker-2-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /mnt/data/kafka/broker-2

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-broker-2-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-broker-3-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: /mnt/data/kafka/broker-3

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-broker-3-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi
