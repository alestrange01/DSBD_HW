# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from services import homework1_pb2 as services_dot_homework1__pb2

GRPC_GENERATED_VERSION = '1.67.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in services/homework1_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ServerServiceStub(object):
    """Services for users management

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/homework1.ServerService/Register',
                request_serializer=services_dot_homework1__pb2.RegisterRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/homework1.ServerService/Login',
                request_serializer=services_dot_homework1__pb2.LoginRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/homework1.ServerService/Update',
                request_serializer=services_dot_homework1__pb2.UpdateRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/homework1.ServerService/Delete',
                request_serializer=services_dot_homework1__pb2.DeleteRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.GetValueShare = channel.unary_unary(
                '/homework1.ServerService/GetValueShare',
                request_serializer=services_dot_homework1__pb2.NoneRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.GetMeanShare = channel.unary_unary(
                '/homework1.ServerService/GetMeanShare',
                request_serializer=services_dot_homework1__pb2.MeanRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.ViewAllUsers = channel.unary_unary(
                '/homework1.ServerService/ViewAllUsers',
                request_serializer=services_dot_homework1__pb2.NoneRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)
        self.TestCache = channel.unary_unary(
                '/homework1.ServerService/TestCache',
                request_serializer=services_dot_homework1__pb2.NoneRequest.SerializeToString,
                response_deserializer=services_dot_homework1__pb2.Reply.FromString,
                _registered_method=True)


class ServerServiceServicer(object):
    """Services for users management

    """

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValueShare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMeanShare(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestCache(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=services_dot_homework1__pb2.RegisterRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=services_dot_homework1__pb2.LoginRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=services_dot_homework1__pb2.UpdateRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=services_dot_homework1__pb2.DeleteRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'GetValueShare': grpc.unary_unary_rpc_method_handler(
                    servicer.GetValueShare,
                    request_deserializer=services_dot_homework1__pb2.NoneRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'GetMeanShare': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMeanShare,
                    request_deserializer=services_dot_homework1__pb2.MeanRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'ViewAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewAllUsers,
                    request_deserializer=services_dot_homework1__pb2.NoneRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
            'TestCache': grpc.unary_unary_rpc_method_handler(
                    servicer.TestCache,
                    request_deserializer=services_dot_homework1__pb2.NoneRequest.FromString,
                    response_serializer=services_dot_homework1__pb2.Reply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'homework1.ServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('homework1.ServerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ServerService(object):
    """Services for users management

    """

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/Register',
            services_dot_homework1__pb2.RegisterRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/Login',
            services_dot_homework1__pb2.LoginRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/Update',
            services_dot_homework1__pb2.UpdateRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/Delete',
            services_dot_homework1__pb2.DeleteRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetValueShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/GetValueShare',
            services_dot_homework1__pb2.NoneRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMeanShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/GetMeanShare',
            services_dot_homework1__pb2.MeanRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ViewAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/ViewAllUsers',
            services_dot_homework1__pb2.NoneRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TestCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/homework1.ServerService/TestCache',
            services_dot_homework1__pb2.NoneRequest.SerializeToString,
            services_dot_homework1__pb2.Reply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
